{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:5000/api/auth';\nexport const login = async (email, password) => {\n  const response = await axios.post(`${API_URL}/login`, {\n    email,\n    password\n  });\n  return response.data;\n};\nexport const signup = async (email, password) => {\n  const response = await axios.post(`${API_URL}/signup`, {\n    email,\n    password\n  });\n  return response.data;\n};\nexport const logout = async () => {\n  await axios.post(`${API_URL}/logout`);\n};\nexport const getCurrentUser = async () => {\n  try {\n    const token = localStorage.getItem('token');\n    if (!token) return null;\n    const response = await axios.get(`${API_URL}/me`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return response.data;\n  } catch (error) {\n    return null;\n  }\n};\nexport const authService = {\n  login,\n  signup,\n  logout,\n  getCurrentUser\n};","map":{"version":3,"names":["axios","API_URL","login","email","password","response","post","data","signup","logout","getCurrentUser","token","localStorage","getItem","get","headers","Authorization","error","authService"],"sources":["C:/Users/Dylan/Documents/GitHub/Campr/client/src/services/auth.ts"],"sourcesContent":["import axios from 'axios';\nimport { AuthResponse, User } from '../types/auth';\n\nconst API_URL = 'http://localhost:5000/api/auth';\n\nexport const login = async (email: string, password: string): Promise<AuthResponse> => {\n  const response = await axios.post(`${API_URL}/login`, { email, password });\n  return response.data;\n};\n\nexport const signup = async (email: string, password: string): Promise<AuthResponse> => {\n  const response = await axios.post(`${API_URL}/signup`, { email, password });\n  return response.data;\n};\n\nexport const logout = async (): Promise<void> => {\n  await axios.post(`${API_URL}/logout`);\n};\n\nexport const getCurrentUser = async (): Promise<User | null> => {\n  try {\n    const token = localStorage.getItem('token');\n    if (!token) return null;\n    \n    const response = await axios.get(`${API_URL}/me`, {\n      headers: { Authorization: `Bearer ${token}` }\n    });\n    return response.data;\n  } catch (error) {\n    return null;\n  }\n};\n\nexport const authService = {\n  login,\n  signup,\n  logout,\n  getCurrentUser\n};"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAGzB,MAAMC,OAAO,GAAG,gCAAgC;AAEhD,OAAO,MAAMC,KAAK,GAAG,MAAAA,CAAOC,KAAa,EAAEC,QAAgB,KAA4B;EACrF,MAAMC,QAAQ,GAAG,MAAML,KAAK,CAACM,IAAI,CAAC,GAAGL,OAAO,QAAQ,EAAE;IAAEE,KAAK;IAAEC;EAAS,CAAC,CAAC;EAC1E,OAAOC,QAAQ,CAACE,IAAI;AACtB,CAAC;AAED,OAAO,MAAMC,MAAM,GAAG,MAAAA,CAAOL,KAAa,EAAEC,QAAgB,KAA4B;EACtF,MAAMC,QAAQ,GAAG,MAAML,KAAK,CAACM,IAAI,CAAC,GAAGL,OAAO,SAAS,EAAE;IAAEE,KAAK;IAAEC;EAAS,CAAC,CAAC;EAC3E,OAAOC,QAAQ,CAACE,IAAI;AACtB,CAAC;AAED,OAAO,MAAME,MAAM,GAAG,MAAAA,CAAA,KAA2B;EAC/C,MAAMT,KAAK,CAACM,IAAI,CAAC,GAAGL,OAAO,SAAS,CAAC;AACvC,CAAC;AAED,OAAO,MAAMS,cAAc,GAAG,MAAAA,CAAA,KAAkC;EAC9D,IAAI;IACF,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,IAAI,CAACF,KAAK,EAAE,OAAO,IAAI;IAEvB,MAAMN,QAAQ,GAAG,MAAML,KAAK,CAACc,GAAG,CAAC,GAAGb,OAAO,KAAK,EAAE;MAChDc,OAAO,EAAE;QAAEC,aAAa,EAAE,UAAUL,KAAK;MAAG;IAC9C,CAAC,CAAC;IACF,OAAON,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOU,KAAK,EAAE;IACd,OAAO,IAAI;EACb;AACF,CAAC;AAED,OAAO,MAAMC,WAAW,GAAG;EACzBhB,KAAK;EACLM,MAAM;EACNC,MAAM;EACNC;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}